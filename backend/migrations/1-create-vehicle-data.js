"use strict";
const sequelize_1 = require("sequelize");
module.exports = {
    up: async (queryInterface) => {
        await queryInterface.createTable('mainteble_data', {
            federal_district: sequelize_1.DataTypes.STRING,
            economic_region: sequelize_1.DataTypes.STRING,
            region: sequelize_1.DataTypes.STRING,
            owner_location_region: sequelize_1.DataTypes.STRING,
            owner_location_federal_district: sequelize_1.DataTypes.STRING,
            vehicle_type: sequelize_1.DataTypes.STRING,
            brand: sequelize_1.DataTypes.STRING,
            model_modification: sequelize_1.DataTypes.STRING,
            model: sequelize_1.DataTypes.STRING,
            modification: sequelize_1.DataTypes.STRING,
            production_year: sequelize_1.DataTypes.STRING,
            registration_year: sequelize_1.DataTypes.STRING,
            registration_quarter: sequelize_1.DataTypes.STRING,
            registration_month: sequelize_1.DataTypes.INTEGER,
            registration_day: sequelize_1.DataTypes.INTEGER,
            quantity: sequelize_1.DataTypes.FLOAT,
            new_or_used: sequelize_1.DataTypes.STRING,
            vin_code: sequelize_1.DataTypes.STRING,
            engine_number: sequelize_1.DataTypes.STRING,
            body_number: sequelize_1.DataTypes.STRING,
            chassis_number: sequelize_1.DataTypes.STRING,
            registration_type: sequelize_1.DataTypes.STRING,
            ownership_type: sequelize_1.DataTypes.STRING,
            district_in_region: sequelize_1.DataTypes.STRING,
            city: sequelize_1.DataTypes.STRING,
            other_settlements: sequelize_1.DataTypes.STRING,
            okato: sequelize_1.DataTypes.STRING,
            oktmo: sequelize_1.DataTypes.STRING,
            regional_center: sequelize_1.DataTypes.STRING,
            postal_code: sequelize_1.DataTypes.STRING,
            engine_power: sequelize_1.DataTypes.STRING,
            engine_type: sequelize_1.DataTypes.STRING,
            fuel_type: sequelize_1.DataTypes.STRING,
            engine_volume: sequelize_1.DataTypes.STRING,
            engine_volume_range: sequelize_1.DataTypes.STRING,
            steering_type: sequelize_1.DataTypes.STRING,
            body_type: sequelize_1.DataTypes.STRING,
            exact_weight: sequelize_1.DataTypes.STRING,
            curb_weight: sequelize_1.DataTypes.STRING,
            weight_segment_1: sequelize_1.DataTypes.STRING,
            weight_segment_2: sequelize_1.DataTypes.STRING,
            weight_segment: sequelize_1.DataTypes.STRING,
            weight_segment_3: sequelize_1.DataTypes.STRING,
            weight_segment_4: sequelize_1.DataTypes.STRING,
            gvw_class: sequelize_1.DataTypes.STRING,
            wheel_formula: sequelize_1.DataTypes.STRING,
            price_segment: sequelize_1.DataTypes.STRING,
            body_type_grouping: sequelize_1.DataTypes.STRING,
            brand_origin_country: sequelize_1.DataTypes.STRING,
            part_of_world: sequelize_1.DataTypes.STRING,
            domestic_or_foreign: sequelize_1.DataTypes.STRING,
            production_country_vin: sequelize_1.DataTypes.STRING,
            domestic_or_foreign_vin: sequelize_1.DataTypes.STRING,
            manufacturer_vin: sequelize_1.DataTypes.STRING,
            production_country_chassis: sequelize_1.DataTypes.STRING,
            domestic_or_foreign_chassis: sequelize_1.DataTypes.STRING,
            manufacturer_chassis: sequelize_1.DataTypes.STRING,
            inn: sequelize_1.DataTypes.STRING,
            company_name: sequelize_1.DataTypes.STRING,
            first_okved_code: sequelize_1.DataTypes.STRING,
            okved_description: sequelize_1.DataTypes.STRING,
            is_lcv: sequelize_1.DataTypes.STRING,
            is_leasing: sequelize_1.DataTypes.STRING,
            leasing_status: sequelize_1.DataTypes.STRING,
            lessor_inn: sequelize_1.DataTypes.STRING,
            lessor_name: sequelize_1.DataTypes.STRING,
            lessee_name: sequelize_1.DataTypes.TEXT,
            lessee_address: sequelize_1.DataTypes.STRING,
            lessee_inn: sequelize_1.DataTypes.STRING,
            lessee_phone: sequelize_1.DataTypes.STRING,
            lessee_email: sequelize_1.DataTypes.STRING,
            lessee_first_okved: sequelize_1.DataTypes.STRING,
            lessee_okved_description: sequelize_1.DataTypes.TEXT,
            lessee_director: sequelize_1.DataTypes.STRING,
            lessee_position: sequelize_1.DataTypes.STRING,
            ID: {
                type: sequelize_1.DataTypes.INTEGER,
                primaryKey: true,
            },
            timestamps: false
        });
    },
    down: async (queryInterface) => {
        await queryInterface.dropTable('vehicle_data');
    },

};
//# sourceMappingURL=1-create-vehicle-data.js.map
